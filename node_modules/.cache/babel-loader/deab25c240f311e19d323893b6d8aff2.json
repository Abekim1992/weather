{"ast":null,"code":"var _jsxFileName = \"/Users/abe/Desktop/JS/react-weather/weather/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport UilReact from '@iconscout/react-unicons/icons/uil-react';\nimport TopButtons from './components/TopButtons';\nimport Inputs from './components/Inputs';\nimport TimeAndLocation from './components/TimeAndLocation';\nimport TemperatureAndDetails from './components/TemperatureAndDetails';\nimport Forecast from './components/Forecast';\nimport getFormattedWeatherData from './services/weatherServices';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [query, setQuery] = useState({\n    q: 'berlin'\n  });\n  const [units, setUnits] = useState('metric');\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      const data = await getFormattedWeatherData({ ...query,\n        units\n      }).then(data => {\n        setWeather(data);\n      });\n    };\n\n    fetchWeather();\n  }, [query, units]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mx-auto max-w-screen-md mt-4 py-5 px-32 bg-gradient-to-br from-cyan-700 to-blue-700 h-fit shadow-xl shadow-gray-400\",\n    children: [/*#__PURE__*/_jsxDEV(TopButtons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Inputs, {\n      setUnits: setUnits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TimeAndLocation, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TemperatureAndDetails, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        title: \"hourly forecast\",\n        item: weather.hourly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        title: \"daily forecast\",\n        item: weather.daily\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+U8zrbIgeUj+w12tGrZUYA8UiT4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["UilReact","TopButtons","Inputs","TimeAndLocation","TemperatureAndDetails","Forecast","getFormattedWeatherData","useState","useEffect","App","query","setQuery","q","units","setUnits","weather","setWeather","fetchWeather","data","then","hourly","daily"],"sources":["/Users/abe/Desktop/JS/react-weather/weather/src/App.js"],"sourcesContent":["import './App.css';\nimport UilReact from '@iconscout/react-unicons/icons/uil-react'\nimport TopButtons from './components/TopButtons';\nimport Inputs from './components/Inputs';\nimport TimeAndLocation from './components/TimeAndLocation';\nimport TemperatureAndDetails from './components/TemperatureAndDetails';\nimport Forecast from './components/Forecast';\nimport getFormattedWeatherData from './services/weatherServices';\nimport { useState, useEffect } from 'react';\n\n\nfunction App() {\n\n  const [query, setQuery] = useState({q: 'berlin'})\n  const [units, setUnits] = useState('metric')\n  const [weather, setWeather] = useState(null)\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      const data = await getFormattedWeatherData({...query, units}).then(data => {\n        setWeather(data)\n      });\n    }\n    fetchWeather()  \n  }, [query, units])\n\n\n  \n  return (\n    <div\n      className=\"mx-auto max-w-screen-md mt-4 py-5 px-32 bg-gradient-to-br from-cyan-700 to-blue-700 h-fit shadow-xl shadow-gray-400\"\n    >\n      <TopButtons/>\n      <Inputs setUnits={setUnits}/>\n      {weather && (\n        <div>\n          <TimeAndLocation weather={weather}/>\n          <TemperatureAndDetails weather={weather}/>\n          <Forecast title=\"hourly forecast\" item={weather.hourly}/>\n          <Forecast title=\"daily forecast\" item={weather.daily}/>\n        </div>\n      )}\n\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,QAAP,MAAqB,0CAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,qBAAP,MAAkC,oCAAlC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,uBAAP,MAAoC,4BAApC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC;IAACK,CAAC,EAAE;EAAJ,CAAD,CAAlC;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,QAAD,CAAlC;EACA,MAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMS,YAAY,GAAG,YAAY;MAC/B,MAAMC,IAAI,GAAG,MAAMZ,uBAAuB,CAAC,EAAC,GAAGI,KAAJ;QAAWG;MAAX,CAAD,CAAvB,CAA2CM,IAA3C,CAAgDD,IAAI,IAAI;QACzEF,UAAU,CAACE,IAAD,CAAV;MACD,CAFkB,CAAnB;IAGD,CAJD;;IAKAD,YAAY;EACb,CAPQ,EAON,CAACP,KAAD,EAAQG,KAAR,CAPM,CAAT;EAWA,oBACE;IACE,SAAS,EAAC,qHADZ;IAAA,wBAGE,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,MAAD;MAAQ,QAAQ,EAAEC;IAAlB;MAAA;MAAA;MAAA;IAAA,QAJF,EAKGC,OAAO,iBACN;MAAA,wBACE,QAAC,eAAD;QAAiB,OAAO,EAAEA;MAA1B;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,qBAAD;QAAuB,OAAO,EAAEA;MAAhC;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,QAAD;QAAU,KAAK,EAAC,iBAAhB;QAAkC,IAAI,EAAEA,OAAO,CAACK;MAAhD;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE,QAAC,QAAD;QAAU,KAAK,EAAC,gBAAhB;QAAiC,IAAI,EAAEL,OAAO,CAACM;MAA/C;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QANJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD;;GAnCQZ,G;;KAAAA,G;AAqCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}